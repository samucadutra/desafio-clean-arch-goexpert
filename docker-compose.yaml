version: '3'

networks:
  desafio-cleanarch-newtwork:
    driver: bridge

services:
  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: orders
      MYSQL_PASSWORD: root
    ports:
      - 3306:3306
    volumes:
      - .docker/mysql:/var/lib/mysql
    networks:
        - desafio-cleanarch-newtwork
    healthcheck:
        test: ["CMD", "mysqladmin", "ping"]
        interval: 10s
        timeout: 5s
        retries: 3

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
        - desafio-cleanarch-newtwork

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go_app
    depends_on:
      - mysql
      - migrate
      - rabbitmq
    environment:
      DB_URL: "mysql://root:root@tcp(mysql:3306)/orders"
    command: sh -c "cd cmd/ordersystem && go run main.go wire_gen.go"
    volumes:
      - .:/app
    networks:
        - desafio-cleanarch-newtwork
    ports:
      - 8000:8000


  migrate:
    image: migrate/migrate
    container_name: migrate
    networks:
      - desafio-cleanarch-newtwork
    volumes:
      - ./internal/infra/database/migrations:/migrations
    command: [ "-path", "/migrations", "-database", "mysql://root:root@tcp(mysql:3306)/orders", "-verbose", "up" ]
    depends_on:
      mysql:
        condition: service_healthy
